name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ecommerce_orders
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.25"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2

      - name: Setup Go workspace
        run: |
          go work init
          go work use ./shared ./order-management-service ./order-reporting-service

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Run golangci-lint
        run: golangci-lint run --timeout=5m

      - name: Run tests
        run: go test -v ./...

      - name: Build services
        run: |
          cd order-management-service && go build -o /tmp/order-management-service cmd/main.go
          cd ../order-reporting-service && go build -o /tmp/order-reporting-service cmd/main.go

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker images
        run: |
          docker build -t order-management-service:latest -f order-management-service/Dockerfile .
          docker build -t order-reporting-service:latest -f order-reporting-service/Dockerfile .

      - name: Test Docker images
        run: |
          docker run --rm order-management-service:latest --help || true
          docker run --rm order-reporting-service:latest --help || true
